import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Rating from "react-rating";
import { useEffect, useState } from "react";
import caveatsJSON from "../../public/caveats.json"




const Home: NextPage = () => {
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  const [initialRating, setInitialRating] = useState(0);
  const [rating, setRating] = useState(0);
  const [caveat, setCaveat] = useState(0);
  const [showRating, setShowRating] = useState(false);


  useEffect(() => {
    getRandomCaveat()
    getRandomRating()
  }, [])

  function handleRatingChange(newRating: number) {
    setShowRating(true)
    setRating(newRating);
  }

  function getRandomCaveat() {
    const randomIndex = Math.floor(Math.random() * caveatsJSON.length);
    setCaveat(caveatsJSON[randomIndex]);
  }

  function getRandomRating() {
    const randomRating = Math.floor(Math.random() * 10) + 1
    setInitialRating(randomRating);
    setRating(randomRating)
  }

  function handleRefresh() {
    getRandomCaveat()
    getRandomRating()
    setShowRating(false)
  }

  function handleSubmit() {
    console.log("Write to database")
    handleRefresh()
  }

  return (
    <>
      <Head>
        <title>They're a 10 but....</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex pt-20 h-screen w-full flex-col bg-slate-800 items-center justify-center">
        <div className="border-4 p-4 w-1/2 rounded-[40px] items-center justify-center">
          <h1 className="text-white text-center text-4xl">They&apos;re {initialRating === 8 ? "an" : "a"} {initialRating},</h1>
          <div className="py-3"></div>
          <h1 className="text-center text-white text-center italic text-4xl">but {caveat}</h1>
        </div>
        <div className="py-5"></div>
        <div className="py-10"></div>
        <h1 className="text-white text-center text-4xl">They&apos;re {rating === 8 ? "an" : "a"} {!showRating ? "..." : rating}</h1>
        <div className="py-5"></div>
        <div className="flex flex-col items-center jutify-center">
          <Rating onClick={handleRatingChange} onHover={() => ""} initialRating={rating} start={0} stop={10} />
        </div>

        <div className="py-5"></div>
        <div className="flex flex-row gap-5 items-center justify-center">

          <button onClick={handleRefresh} className="border rounded text-white text-2xl p-4">Refresh</button>
          <button onClick={handleSubmit} className="border rounded text-white text-2xl p-4">Submit</button>
        </div>




      </div>

    </>
  );
};

export default Home;
